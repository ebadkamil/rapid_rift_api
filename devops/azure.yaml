trigger:
- '*'

variables:
  - name: env_name
    value: "rapid_rift_api_$(Build.BuildId)_env"

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: BuildTest
  steps:
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - script: |
      echo "Setting up build variables:"
      echo "  Branch/tag: $(Build.SourceBranch)"
      echo "  Local env: $(env_name)"
    displayName: 'Initialize Variables'

  - script: |
      conda create -n $(env_name) python=3.9 -y
      source activate $(env_name)
      which pip
      pip install .[test]
    displayName: 'Build Rapid-Rift-API Package'

  - script: |
      source activate $(env_name)
      black --check src/ tests/
      isort --profile black -c src/ tests/
    displayName: 'Formatting Check'

  - script: |
      source activate $(env_name)
      python -m pytest -v tests/
    displayName: 'Run Unit Tests'

- job: SendEmail
  dependsOn: BuildTest
  condition: always()
  steps:
  - script: |
      echo "The build has finished"
      echo "Author name $(author_name)"

- job: OnSuccess
  dependsOn: BuildTest
  condition: succeeded()
  steps:
  - script: echo "The build succeeded"

- job: OnFailure
  dependsOn: BuildTest
  condition: failed()
  steps:
  - script: echo "The build failed"

# Add release artifacts later

# - script: |
#     pip install build
#     pip install twine
#   displayName: 'Install build and twine'

# - script: |
#     python -m build -w
#   displayName: 'Python build'

# - task: TwineAuthenticate@1
#   inputs:
#     artifactFeed: ebadkamil/nexi-feed
#   displayName: 'Twine Authenticate'

# - script: |
#     python -m twine upload -r nexi-feed --config-file $(PYPIRC_PATH) dist/*.whl
#   displayName: 'Upload to feed'